#!/usr/bin/php

<?php

// 0. Debugging info
$t1 = microtime(1);
$m1 = memory_get_usage();

error_reporting(E_ALL);
ini_set('display_errors', 1);

// 1. Preliminary settings

date_default_timezone_set('UTC');
// include_once 'vendor/colinmollenhour/credis/Client.php';

chdir(__DIR__);


// 2. Load namespaces

$loaderClassMap = array
(
);

$autoClasses0 = array
(
    'App\\'         => '.',

    // 3rd parties
    'Resque'        => 'vendor/chrisboulton/php-resque/lib',
    'Google'        => 'vendor/google/apiclient/src',
    'SecurityLib'   => 'vendor/ircmaxell/security-lib/lib',
    'RandomLib'     => 'vendor/ircmaxell/random-lib/lib',
);

$autoClasses4 =
[
    'League\\OAuth2\\Client\\'  => ['vendor/league/oauth2-client/src/', 'vendor/league/oauth2-google/src/'],
    'Psr\\Http\\Message\\'      => 'vendor/psr/http-message/src/',
    'GuzzleHttp\\Psr7\\'        => 'vendor/guzzlehttp/psr7/src/',
    'GuzzleHttp\\Promise\\'     => 'vendor/guzzlehttp/promises/src/',
    'GuzzleHttp\\'              => 'vendor/guzzlehttp/guzzle/src/',
];

spl_autoload_register(function($class) use ($loaderClassMap, $autoClasses0, $autoClasses4)
{
    // class map lookup
    if (isset ($loaderClassMap[$class]))
    {
        if ($loaderClassMap[$class])
        {
            include_once $loaderClassMap[$class];
            return true;
        }
        else
        {
            return false;
        }
    }

    if (strpos($class, '\\') === false && file_exists('boosters/' . $class . '.php'))
    {
        include_once 'boosters/' . $class . '.php';
        return true;
    }

    foreach ($autoClasses0 as $namespace => $dir)
    {
        if (0 === strpos($class, $namespace))
        {
            if (strpos($class, '_'))
            {
                $class = strtr(strtr($class, $namespace . '_', ''), '_', '/');
            }

            include_once $dir . '/' . strtr($class, '\\', '/') . '.php';
            return true;
        }
    }

    //echo "Namespace = $namespace\n";
    //echo "Class = $class\n";

    foreach ($autoClasses4 as $namespace => $dir)
    {
        if (0 === strpos($class, $namespace))
        {
            if (is_array($dir))
            {
                foreach ($dir as $dirry)
                {
                    $file = $dirry . strtr(str_replace($namespace, '', $class), '\\', '/') . '.php';
                    if (file_exists($file))
                    {
                        include_once $file;
                        return true;
                    }
                }
            }
            else
            {
                include_once $dir . strtr(str_replace($namespace, '', $class), '\\', '/') . '.php';
                return true;
            }
        }
    }

    // Remember that this class does not exist.
    return $loaderClassMap[$class] = false;

}, true, true);


// 3. Cleanup

unset ($autoClasses0);
unset ($loaderClassMap);


// 4. Run application

if ($argc < 2)
{
    system('clear');

    echo "\033[0;34m\n";
    echo "Available commands:\n\n";
    echo "\033[0;32m";
    include 'App/Model/CliTool/cli-docs.php';
    echo "\033[0m\n";

    return;
}

try
{
    $tool = new \App\Model\CliTool(require_once 'App/config.php');
    echo $tool->dispatch($argv) . "\n";
}
catch (\Exception $e)
{
    $isError   = true;
    $errMsg    = $e->getMessage();
    $errorCode = $e->getCode() ?: 500;

    http_response_code($errorCode);

    if ($errorCode == 500 && \Sys::cfg('release') != false)
    {
        // report to Santa about someone's bad behaviour
        \App\Service\Resque::addJob('ReportError',
         [
             'stack'     => $e->getTrace(),
             'msg'       => $errMsg,
             'server'    => $_SERVER,
             'input'     => @$argv,
         ]);
    }
}